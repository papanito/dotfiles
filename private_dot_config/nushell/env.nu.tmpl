# Nushell Environment Config File
#

# The prompt indicators are environmental variables that represent
# the state of the prompt
$env.PROMPT_INDICATOR = {|| "> " }
$env.PROMPT_INDICATOR_VI_INSERT = {|| ": " }
$env.PROMPT_INDICATOR_VI_NORMAL = {|| "> " }
$env.PROMPT_MULTILINE_INDICATOR = {|| "::: " }

# If you want previously entered commands to have a different prompt from the usual one,
# you can uncomment one or more of the following lines.
# This can be useful if you have a 2-line prompt and it's taking up a lot of space
# because every command entered takes up 2 lines instead of 1. You can then uncomment
# the line below so that previously entered commands show with a single `ðŸš€`.
# $env.TRANSIENT_PROMPT_COMMAND = {|| "ðŸš€ " }
# $env.TRANSIENT_PROMPT_INDICATOR = {|| "" }
# $env.TRANSIENT_PROMPT_INDICATOR_VI_INSERT = {|| "" }
# $env.TRANSIENT_PROMPT_INDICATOR_VI_NORMAL = {|| "" }
# $env.TRANSIENT_PROMPT_MULTILINE_INDICATOR = {|| "" }
# $env.TRANSIENT_PROMPT_COMMAND_RIGHT = {|| "" }

# Specifies how environment variables are:
# - converted from a string to a value on Nushell startup (from_string)
# - converted from a value back to a string when running external commands (to_string)
# Note: The conversions happen *after* config.nu is loaded
$env.ENV_CONVERSIONS = {
    "PATH": {
        from_string: { |s| $s | split row (char esep) | path expand --no-symlink }
        to_string: { |v| $v | path expand --no-symlink | str join (char esep) }
    }
    "Path": {
        from_string: { |s| $s | split row (char esep) | path expand --no-symlink }
        to_string: { |v| $v | path expand --no-symlink | str join (char esep) }
    }
}

# Directories to search for scripts when calling source or use
# The default for this is $nu.default-config-dir/scripts
$env.NU_LIB_DIRS = [
    ($nu.default-config-dir | path join 'scripts') # add <nushell-config-dir>/scripts
    ($nu.data-dir | path join 'completions') # default home for nushell completions
]

# Directories to search for plugin binaries when calling register
# The default for this is $nu.default-config-dir/plugins
$env.NU_PLUGIN_DIRS = [
    ($nu.default-config-dir | path join 'plugins') # add <nushell-config-dir>/plugins
]

$env.LANG = "en_US.UTF-8"
$env.LC_CTYPE = "de_CH_UTF-8"
$env.LC_NUMERIC = "de_CH_UTF-8"
$env.LC_TIME = "de_CH_UTF-8"
$env.LC_COLLATE = "de_CH_UTF-8"
$env.LC_MONETARY = "de_CH_UTF-8"
$env.LC_MESSAGES = "en_US.UTF-8"
$env.LC_PAPER = "de_CH_UTF-8"
$env.LC_NAME = "de_CH_UTF-8"
$env.LC_ADDRESS = "de_CH_UTF-8"
$env.LC_TELEPHONE = "de_CH_UTF-8"
$env.LC_MEASUREMENT = "de_CH_UTF-8"
$env.LC_IDENTIFICATION = "de_CH_UTF-8"

$env.QT_QPA_PLATFORM = "wayland"

$env.BLOCKSIZ = "K"
$env.BROWSER = 'firefox'
# $env.BROWSER = $(find_alternatives chromium-browser google-chrome opera firefox firefox-bin iceweasel konqueror w3m lynx)    # uses function 'find_alternatives'
# $env.CDPATH = .:~:~/src:/etc
# $env.DISPLAY = :79
# $env.EDITOR = "gedit -w --resume" Typing 'fc'    # open last command for editing in gedit, then execute on save
{{- if .isDeveloperMachine }}
$env.EDITOR = 'hx'
{{- else }}
$env.EDITOR = "vi"
$env.VISUAL = "emacs"
{{- end }}
# $env.ftp_proxy = ${MY_PROXY}
# $env.GPG_TTY = 'tty' # gpg-agent says it needs this
# $env.GREP_OPTIONS = '-D skip --binary-files = without-match --ignore-case' # most commonly used grep options
$env.PAGER = 'less -e'
# $env.PILOTRATE = 57600 # make pilot-xfer go faster than 9600
$env.TERM = 'xterm'
$env.TIMEFORMAT = $'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
# $env.TMOUT = 1200 # auto logout after n seconds of inactivity
# $env.USER_CLIENT = deluge
# $env.USER_DPRT = 22218
# $env.USER_OPRT = 47426
# $env.USER_VPRT = 79
# $env.USER_WPRT = 30818
# $env.wpsetters = feh
$env.VIEWER = "eog"

$env.ANSIBLE_NOCOWS = 1
$env.SHELL_HELPER_LIBRARY = $"($env.HOME)/.local/share/zinit/plugins/papanito---shell-helper-library/"
$env.GOPATH = $"($env.XDG_DATA_HOME)/go"
$env.GOPROXY = "direct"
$env.ZELLIJ_AUTO_ATTACH = true
$env.NPMPATH = $"($env.XDG_DATA_HOME)/.npm/bin"
$env.KUBECONFIG = $"($env.HOME)/.kube/config"
$env.FZF_BASE = "/run/current-system/sw/bin/fzf"

$env.NIXPKGS_CONFIG = "/etc/nix/nixpkgs-config.nix"
$env.NIX_GSETTINGS_OVERRIDES_DIR = "/nix/store/ajmwcizyzc87wwqjmqfxyz1qmhvk7skw-gnome-gsettings-overrides/share/gsettings-schemas/nixos-gsettings-overrides/glib-2.0/schemas"
$env.NIX_PATH = "nixpkgs=flake:nixpkgs:/nix/var/nix/profiles/per-user/root/channels"
$env.NIX_PROFILES = "/run/current-system/sw /nix/var/nix/profiles/default /etc/profiles/per-user/papanito /home/papanito/.local/state/nix/profile /nix/profile /home/papanito/.nix-profile"
$env.NIX_USER_PROFILE_DIR = "/nix/var/nix/profiles/per-user/papanito"
$env.NIX_XDG_DESKTOP_PORTAL_DIR = "/run/current-system/sw/share/xdg-desktop-portal/portals"
$env.__NIXOS_SET_ENVIRONMENT_DONE = "1"
$env.NIX_HM_SESSION_VARS = "/home/papanito/.nix-profile/etc/profile.d/hm-session-vars.sh"
$env.NIXOSWD = "/home/papanito/Workspaces/papanito/nixos-configuration/"
$env.NIXOSDIR = "/etc/nixos"


# To add entries to PATH (on Windows you might use Path), you can use the following pattern:
# $env.PATH = ($env.PATH | split row (char esep) | prepend '/some/path')
# An alternate way to add entries to $env.PATH is to use the custom command `path add`
# which is built into the nushell stdlib:
use std "path add"
# $env.PATH = ($env.PATH | split row (char esep))
# path add /some/path
# path add ($env.CARGO_HOME | path join "bin")
# path add ($env.HOME | path join ".local" "bin")
# $env.PATH = ($env.PATH | uniq)
## Set PATH
{{- if eq .osid "linux-nixos" }}
#$env.PATH=/run/wrappers/bin:$HOME/.nix-profile/bin:/etc/profiles/per-user/papanito/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin
$env.GH_PATH = "/run/current-system/sw/bin/gh"
{{- end }}
{{- if eq .chezmoi.hostname "work" }}
#$env.PATH=$PATH
{{- else if .isDeveloperMachine }}
path add /run/current-system/sw/bin
path add ~/.local/bin
path add ~/.local/scripts/scripts
path add ~/.local/scripts/wondershaper
    path add ~/.local/cmdfukr
path add ~/.emacs.d/bin
path add ~/.krew/bin
{{- end }}


# To load from a custom file you can use:
# source ($nu.default-config-dir | path join 'custom.nu')

zoxide init nushell | save -f ~/.zoxide.nu

#$env.NIX_CONF_DIR = "$env.HOME/.config/nix"
$env.CARAPACE_BRIDGES = 'zsh,fish,bash,inshellisense' # optional

{{- if eq .osid "linux-nixos" }}
#$env.NIX_HM_SESSION_VARS="$env.HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
# [[ -f "$NIX_HM_SESSION_VARS" ]] && source "$NIX_HM_SESSION_VARS"
{{- end }}