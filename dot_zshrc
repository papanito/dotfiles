# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Common folders
export ZDOTDIR="$HOME"
export DOTFILES="${ZDOTDIR:-$HOME}/.config/dotfiles"
[[ -d "$DOTFILES" ]] || mkdir -p "$DOTFILES"
export ZSH_DOTFILES="$DOTFILES"
[[ -d "$ZSH_DOTFILES" ]] || mkdir -p "$ZSH_DOTFILES"
export ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}"
[[ -d "$ZSH_CACHE_DIR" ]] || mkdir -p "$ZSH_CACHE_DIR"
export HISTFILE="$XDG_STATE_HOME"/zsh/history
export MCFLY_HISTFILE="$XDG_STATE_HOME"/zsh/history

# https://gnunn1.github.io/tilix-web/manual/vteconfig/
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    source /etc/profile.d/vte.sh
fi

# https://z.digitalclouds.dev/docs/getting_started/installation/#-setup-zi-directory
if [[ ! -f $HOME/.zi/bin/zi.zsh ]]; then
  print -P "%F{33}▓▒░ %F{160}Installing (%F{33}z-shell/zi%F{160})…%f"
  command mkdir -p "$HOME/.zi" && command chmod g-rwX "$HOME/.zi"
  command git clone -q --depth=1 --branch "main" https://github.com/z-shell/zi "${ZDOTDIR:-$HOME}/.zi/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi
zi_home="$HOME/.zi"
source "${zi_home}/bin/zi.zsh"
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi

# ZSH Settings
autoload -Uz compinit; compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-"$ZSH_VERSION"
autoload -U +X bashcompinit && bashcompinit

autoload -U colors && colors    # Load Colors.
unsetopt case_glob              # Use Case-Insensitve Globbing.
setopt globdots                 # Glob Dotfiles As Well.
setopt extendedglob             # Use Extended Globbing.
setopt autocd                   # Automatically Change Directory If A Directory Is Entered.

# Smart URLs.
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# General.
setopt brace_ccl                # Allow Brace Character Class List Expansion.
setopt combining_chars          # Combine Zero-Length Punctuation Characters ( Accents ) With The Base Character.
setopt rc_quotes                # Allow 'Henry''s Garage' instead of 'Henry'\''s Garage'.
unsetopt mail_warning           # Don't Print A Warning Message If A Mail File Has Been Accessed.

# Jobs.
setopt long_list_jobs           # List Jobs In The Long Format By Default.
setopt auto_resume              # Attempt To Resume Existing Job Before Creating A New Process.
setopt notify                   # Report Status Of Background Jobs Immediately.
unsetopt bg_nice                # Don't Run All Background Jobs At A Lower Priority.
unsetopt hup                    # Don't Kill Jobs On Shell Exit.
unsetopt check_jobs             # Don't Report On Jobs When Shell Exit.

setopt correct                  # Turn On Corrections

# Completion Options.
setopt complete_in_word         # Complete From Both Ends Of A Word.
setopt always_to_end            # Move Cursor To The End Of A Completed Word.
setopt path_dirs                # Perform Path Search Even On Command Names With Slashes.
setopt auto_menu                # Show Completion Menu On A Successive Tab Press.
setopt auto_list                # Automatically List Choices On Ambiguous Completion.
setopt auto_param_slash         # If Completed Parameter Is A Directory, Add A Trailing Slash.
setopt no_complete_aliases

setopt menu_complete            # Do Not Autoselect The First Completion Entry.
unsetopt flow_control           # Disable Start/Stop Characters In Shell Editor.

# define the completer we’ll use for our completion system
# The order matter: the completion system will try each of these completer one after the other
zstyle ':completion:*' completer _expand_alias _expand _complete _correct _approximate

# If you end up using a directory as argument, this will remove the trailing slash (usefull in ln)
zstyle ':completion:*' squeeze-slashes true

# cd will never select the parent directory (e.g.: cd ../<TAB>):
zstyle ':completion:*:cd:*' ignore-parents parent pwd

# Using a cache for the completion can speed up some commands, like apt for example. Let’s add the following in our file to enable it:
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$ZSH_CACHE_DIR/.zcompcache"

# To group the different type of matches under their descriptions,
zstyle ':completion:*' group-name ''
zstyle ':completion:*:*:-command-:*:*' group-order aliases builtins functions commands

zstyle ':completion:*:*:-command-:*:*' group-order alias builtins functions commands
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' menu select=2

zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'
zstyle ':completion:*:*:*:*:descriptions' format '%F{blue}-- %D %d --%f'
zstyle ':completion:*:*:*:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:*:*:*:warnings' format ' %F{red}-- no matches found --%f'
# zstyle ':completion:*:default' list-prompt '%S%M matches%s'
# Colors for files and directory
zstyle ':completion:*:*:*:*:default' list-colors ${(s.:.)LS_COLORS}

zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
# Completing process IDs with menu selection:
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

# See ZSHCOMPWID "completion matching control"
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' keep-prefix true

zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# History
HISTFILE="${ZDOTDIR:-$HOME}/.zsh_history"
HISTSIZE=10000
SAVEHIST=5000
setopt bang_hist                # Treat The '!' Character Specially During Expansion.
setopt inc_append_history       # Write To The History File Immediately, Not When The Shell Exits.
setopt share_history            # Share History Between All Sessions.
setopt hist_expire_dups_first   # Expire A Duplicate Event First When Trimming History.
setopt hist_ignore_dups         # Do Not Record An Event That Was Just Recorded Again.
setopt hist_ignore_all_dups     # Delete An Old Recorded Event If A New Event Is A Duplicate.
setopt hist_find_no_dups        # Do Not Display A Previously Found Event.
setopt hist_ignore_space        # Do Not Record An Event Starting With A Space.
setopt hist_save_no_dups        # Do Not Write A Duplicate Event To The History File.
setopt hist_verify              # Do Not Execute Immediately Upon History Expansion.
setopt extended_history         # Show Timestamp In History
bindkey -e

# Functions and stuff
zi ice from"gitlab"
zi light papanito/shell-helper-library

export ZSH_KEYBINDINGS=$ZSH_DOTFILES/zkbd.zsh
[[ -f $ZSH_KEYBINDINGS ]] && source $ZSH_KEYBINDINGS
export SHELL_ALIASES=$DOTFILES/aliases
[[ -f $SHELL_ALIASES ]] && source $SHELL_ALIASES
export SHELL_FUNCTIONS=$DOTFILES/functions
[[ -f $SHELL_FUNCTIONS ]] && source $SHELL_FUNCTIONS
export ZSHRC_LOCAL=$DOTFILES/zsh/zshrc.local
[[ -f $ZSHRC_LOCAL ]] && source $ZSHRC_LOCAL # settings that vary per workstation

## Ensure completions directory exists
if [[ ! -d $ZSH_CACHE_DIR/completions/ ]]; then
   mkdir "$ZSH_CACHE_DIR/completions/"
fi

autoload -U add-zsh-hook                      # Load the zsh hook module
add-zsh-hook preexec pre_validation           # Adds the hook

# Theme: https://github.com/romkatv/powerlevel10k
## To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
export ZSH_P10K=$ZSH_DOTFILES/.p10k.zsh
[[ -f $ZSH_P10K ]] && source $ZSH_P10K
zi load romkatv/powerlevel10k

## https://z.digitalclouds.dev/docs/getting_started/overview/
zi snippet OMZ::plugins/aliases
zi snippet OMZ::plugins/archlinux
zi snippet OMZ::plugins/ansible
zi snippet OMZ::plugins/colorize
zi snippet OMZ::plugins/dotenv
zi snippet OMZ::plugins/docker
zi snippet OMZ::plugins/docker-compose
zi snippet OMZ::plugins/fzf
zi snippet OMZ::plugins/flutter
zi snippet OMZ::plugins/gnu-utils
zi snippet OMZ::plugins/gcloud
zi snippet OMZ::plugins/git
zi snippet OMZ::plugins/git-extras
zi snippet OMZ::plugins/github
zi snippet OMZ::plugins/gitignore
zi snippet OMZ::plugins/git-prompt
zi snippet OMZ::plugins/golang
zi snippet OMZ::plugins/gradle
zi snippet OMZ::plugins/helm
zi snippet OMZ::plugins/kubectl
zi snippet OMZ::plugins/pip
zi snippet OMZ::plugins/pyenv
zi snippet OMZ::plugins/pylint
zi snippet OMZ::plugins/python
zi ice silent
zi snippet OMZ::plugins/ssh-agent
zi snippet OMZ::plugins/rsync
zi snippet OMZ::plugins/tmux
zi snippet OMZ::plugins/thefuck
zi snippet OMZ::plugins/terraform

# use exa instead ls
export exa_params=('--git' '--classify' '--group-directories-first' '--time-style=long-iso' '--group' '--color-scale')
zi load zplugin/zsh-exa

# install zoxide
zi ice as'null' from"gh-r" sbin
zi load ajeetdsouza/zoxide
zi ice has'zoxide'
zi load z-shell/zsh-zoxide

# non ohmyzsh plugins
zi light zsh-users/zsh-history-substring-search # https://github.com/zsh-users/zsh-history-substring-search
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "${keys[Up]}" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey "${keys[Down]}" history-substring-search-down

zi light-mode for \
  z-shell/z-a-meta-plugins @annexes @zsh-users+fast \
  z-shell/zsh-navigation-tools \
  Aloxaf/fzf-tab \
  wfxr/forgit \
  papanito/bwf \
  mbhynes/fzf-gcloud \
  reegnz/jq-zsh-plugin \
  gko/ssh-connect

# https://github.com/sei40kr/zsh-fast-alias-tips
zi ice from'gh-r' as'program'
zi light sei40kr/fast-alias-tips-bin
zi light sei40kr/zsh-fast-alias-tips

# completion stuff
AZCOMP=/etc/bash_completion.d/azure-cli
[[ ! -f $AZCOMP  ]] || source $AZCOMP
AZCOMP2=$DOTFILES/az.completion
[[ -f $AZCOMP2 ]] && source $AZCOMP2
GCLOUDCOMP=$GOOGLE_CLOUD_SDK_HOME/completion.zsh.inc
[[ -f $GCLOUDCOMP ]] && source $GCLOUDCOMP

# widgets
zle -N znt-cd-widget
bindkey "^B" znt-cd-widget

zle -N znt-kill-widget
bindkey "^Y" znt-kill-widget

## Hishtory
source $HOME/$HISHTORY_PATH/config.zsh

eval "$(direnv hook zsh)"
#eval "$(mcfly init zsh)"
eval "$(navi widget zsh)"
eval "$(hcloud completion zsh)"
eval "$(hishtory completion zsh)"
hishtory enable
# eval "$(zellij setup --generate-auto-start zsh)"